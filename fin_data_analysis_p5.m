%Kengroo.com, 2017 - % Author: Ashish Jagtiani (ashishvjagtiani@gmail.com)% Tutorial Series: Progamming in Octave%%% Octave Script scrapes data from the NASDAQ website% and prints current price% New from p3: Allows checking for multiple stock data% This script allows multiple stocks to be checked%% Part 4 of financial data analysisclear;clc;close all;% Define the stocks you want to check - semicolon seperatedticker=["AAPL";"MSFT";"GE";"ILMN";"ATVI";"WYNN";"CSX"];ticker_size = size(ticker);%printing header for table outside for loop%Getting local time and dateretrieve_time=strftime("%Y-%m-%d %H:%M:%S (%Z)", localtime (time ()));fprintf("Stock price as of %s \n\n",retrieve_time);data_col_header = "Stock\t Current\tPrev. Close\tToday's High\tTodays Low\t52 Week High\t52 Week Low\tNet Change\tNet Percent change\t\n";fprintf(data_col_header);for i=1:ticker_size(1)%corrects for blank spaces due to length mismatch of tickerticker_corr = strtrim(ticker(i,:));%Based on the website link, use string concantation to define the web linkdata_link = cstrcat("http://www.nasdaq.com/symbol/",ticker_corr,"/real-time");%Read the data, this pull all html datastockData_html=urlread(data_link);%-------------Get Values using function getStockVals-------------------stockData_current = getStockVals(stockData_html, "quotes_content_left__LastSale",0,0);stockData_previousClose = getStockVals(stockData_html, "quotes_content_left__PreviousClose",0,0);stockData_todaysHigh = getStockVals(stockData_html, "quotes_content_left__TodaysHigh",0,0);stockData_todaysLow = getStockVals(stockData_html, "quotes_content_left__TodaysLow",0,0);stockData_52weekHigh = getStockVals(stockData_html, "quotes_content_left__52WeekHigh",1,0);stockData_52weekLow = getStockVals(stockData_html, "quotes_content_left__52WeekLow",1,0);stockData_Header = getStockVals(stockData_html, "h1", 0,0);stockData_netChange = getStockVals(stockData_html, "quotes_content_left__NetChange",0,0);stockData_netDirection = getStockVals(stockData_html, "_updownImage",1,0);stockData_netPercentChange = getStockVals(stockData_html, "quotes_content_left__PctChange",0,0);#convert image/ASCII pulled to symbolif (stockData_netDirection =="#9660;")stockData_netDirection_sign="-";elsestockData_netDirection_sign="+";endif#combine sign with met change and percent change -since at this time they are stringstockData_netChange_withsign = cstrcat(stockData_netDirection_sign, stockData_netChange); #This is still a stringstockData_netPercentChange_withsign = cstrcat(stockData_netDirection_sign, stockData_netPercentChange); #This is still a string# Storing the above data in the 2D array or matrix and converting the data to numbers, it is a string right now# Ideally better to do this when we get the values initially amd store them in variablesstockData_2D_storage(i,1)=str2num(stockData_current); stockData_2D_storage(i,2)=str2num(stockData_previousClose);stockData_2D_storage(i,3)=str2num(stockData_todaysHigh); stockData_2D_storage(i,4)=str2num(stockData_todaysLow); stockData_2D_storage(i,5)=str2num(stockData_52weekHigh); stockData_2D_storage(i,6)=str2num(stockData_52weekLow); stockData_2D_storage(i,7)=str2num(stockData_netChange_withsign); %remove percentage sign for value before converting from string to numbersize_stockData_netPercentChange_with_sign = size(stockData_netPercentChange_withsign)(2);stockData_netPercentChange_withsign_wo_symbol = stockData_netPercentChange_withsign(1:size_stockData_netPercentChange_with_sign-1);%stored net percent changestockData_2D_storage(i,8)=str2num(stockData_netPercentChange_withsign_wo_symbol);%%-----------Final printing----------------------------------------------%%%print the stock price (from Part 4)#fprintf("Stock price for %s on %s (local time)\n\n",ticker(i,:), retrieve_time);#fprintf("Stock price = $%s \n",stockData_current);#fprintf("Net Change %s%s\n",stockData_netDirection_sign, stockData_netChange);#fprintf("Net Percent Change %s%s\n\n",stockData_netDirection_sign, stockData_netPercentChange);#fprintf("Previous close = $%s\n\n",stockData_previousClose);#fprintf("Today's High = $%s\n",stockData_todaysHigh);#fprintf("Today's Low = $%s\n\n",stockData_todaysLow);#fprintf("52 Week High = $%s\n",stockData_52weekHigh);#fprintf("52 Week Low = $%s\n\n",stockData_52weekLow);fprintf("%s\t$%f\t$%f\t$%f\t$%f\t$%f\t$%f\t%f\t%f%%\t\n",ticker(i,:), stockData_2D_storage(i,1),stockData_2D_storage(i,2),stockData_2D_storage(i,3),stockData_2D_storage(i,4),stockData_2D_storage(i,5),stockData_2D_storage(i,6),stockData_2D_storage(i,7),stockData_2D_storage(i,8));endfor% Save the data to a csv file for future usefolder = "./data/";filename_data =cstrcat(folder,"Stock_data_", retrieve_time,".csv");csvwrite(filename_data, stockData_2D_storage);% Save a header file which corresponds to the stored retrival time, stocks pulled and data headersfilename_header =cstrcat(folder,"Stock_header_", retrieve_time,".txt");fid = fopen (filename_header, "w");fdisp(fid, "Stock data retrieved:");fdisp(fid, retrieve_time);fdisp(fid, "\n");fdisp(fid, "stock ticker:");fdisp(fid, ticker);fdisp(fid, "\n");fdisp(fid, "Data cols:");fdisp(fid, data_col_header);fclose (fid);% Lets create a bar plot to show a comparison of the current stock prices% plot current price and prev closesubplot(2,1,1)stockData_bar = bar(stockData_2D_storage(:,1:2));legend('Current', 'Prev Close')% Add the axis labelxlabel('Stock')ylabel ('Amount in Dollars')% X ticks are numbers, we need them to correspond to the stock nameset (gca, 'xticklabel', ticker(:,1:4))%plot net percentage changesubplot(2,1,2)percent_bar = bar(stockData_2D_storage(:,8));% Add the axis labelxlabel('Stock')ylabel ('% change')% X ticks are numbers, we need them to correspond to the stock nameset (gca, 'xticklabel', ticker(:,1:4))